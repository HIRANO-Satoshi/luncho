* Fast Luncho client library for TypeScript and Aurelia

  - This client library converts a Luncho value into a value in local currency, and vice versa,
    quickly using data from the Luncho server and cached data.

** Installation

  - yarn install luncho-typescript-aurelia

** Use


import { Luncho } from 'luncho-typescript-aurelia;

@autoinject
export class MyApp {
    luncho: LunchoFast;
    countryCode: string = 'JPN';
    lunchoValue: number = 100;
    result: LunchoResult;

    constructor(app: App, luncho: LunchoFast) {
        this.luncho = luncho;
    }

    attached() {
        this.convertFromLuncho();
    }

    async convertFromLuncho() {
        this.luncho.luncho({countryCode: this.countryCode, lunchoValue: Number(this.lunchoValue)})
            .then((result: LunchoResult) => {
                this.result = result;
            });
    }
}

** Country code

  - You need to tell the API which country you want to convert for. A country code is
    in ISO 3166-1 2 letter code, for example, 'JP'. There are four options.

  1. Use a fixed country code. E.g. 'JP', 'In'

  2. Use an IP geolocation service to get the country code from IP address of your client.
    - [[https://rapidapi.com/blog/ip-geolocation-api/][List of free IP geolocation services]]

  3. Don't pass a country code if you run your Luncho server behind Google Cloud load balancer or AWS
     CloudFront and do have done some set up described in the README.org of the Luncho server.
