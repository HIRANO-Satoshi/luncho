* Luncho Server

** What it does?

  - The Luncho server provides API so that your app or web site can show both Luncho prices and
    local prices. The API provides required data in LunchoData structure to client libraries. The
    client libraries calculate Luncho and local prices locally using cached LunchoData at the client
    side. So, the calculation is local and fast.

  - The Luncho server provides OpenAPI so that you can generate the client libraries.
    - See [[https://www.luncho-index.org/redoc][API documentation]] and [[https://www.luncho-index.org/openapi.json ][schema definition]].
    - However, our client libraries have additional files for the local calculation and caching. See
      individual README files for each language.
      - [[../luncho_typescript-aurelia/README.org][luncho_typescript-aurelia]],
      - [[../luncho_python/README.org][luncho_python]]

  - The Luncho server hosts [[../app][the Luncho app]] web site.

** Requirements

  - Python3 or Pypy3
  - FastAPI (Web framework)
  - gunicorn (Optional)

  - Server
    - Google App Engine, standard or flexible (Optional)
    - or any Docker compatible server
    - or any Python

** Installation

*** (Optional) Access key for foreign exchange (forex) rate data

  - By default, we use exchangerate.host which is a free exchange rate data provider. The Luncho
    server updates the forex data at 00:06 UTC every day. LunchoData expires at the time. If 24-hour
    update cycle of the forex data is OK for you, skip to the installation as you don't need to do
    anything about the exchange rate.

  - However, if you want to use one hour update rather than the default 24-hour update, edit conf.py
    to set Use_Fixer_For_Forex to True. And create a user account on Fixer.io and place your access
    key in api_keys.py.

    Fixer_Access_Key = 'XXXXXXXX'

*** Local installation

  - [[https://www.pypy.org/download.html][Install pypy3]]
   - (Mac) brew install pypy3
  - Install Rust that is required to run pip
   - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
   - (restart bash to add rustup to PATH)
   - rustup install nightly ; rustup default nightly
  - Run install script
   - bin/install-packages.sh
  - You have pypyenv dir that includes site-packages.

*** Run a local Luncho server

  - bin/start-gunicorn.sh

  - Open a browser at http://localhost:8000/v1/all-country-data for API access.
  - See [[../app/README.org][../app/README.org]] how to run the Luncho app.

*** Run on Google App Engine

  - Install gcloud SDK
  - Make a project and deploy
    gcloud auth login
    gcloud app create --project=my-luncho-server
    gcloud config set project my-luncho-server
    gcloud app deploy --quiet

*** Docker installation

  - build
     docker compose build --progress plain
  - run
     docker run luncho-server_app

*** (Optional) To generate client library and link

  - pypy3 main.py gen
  - if you use yarn or npm, compile and link;
    pushd ../luncho_typescript-aurelia; yarn install; yarn link; popd
    pushd ../app; yarn link "luncho_typescript-aurelia"; popd

*** Test

  - pytest test/test_server.py
  - pytest test/test_client_lib.py

** Limitations

  - The Luncho server refreshes exchange rates every 24 hours and tell clients to keep data for one
    hour. If you have multiple Luncho servers, the servers refresh exchange rates independently. You
    may get different results.


** Data

- PPP from IMF World Economic Outlook (October 2020)
  - [[server/data/imf-dm-export-20201110.csv]]
  - Press "All Data" to get it at [[https://www.imf.org/external/datamapper/PPPEX@WEO/OEMDC/ADVEC/WEOWORLD][here]]
  - 194 countries and regions
  - Country name is defined as "Table Name" in the following ICP-2017 metadata

- ICP-2017 metadata
  - [[server/data/Data_Extract_From_ICP_2017_Metadata.csv]]
  - Extracted the following metadata from [[https://databank.worldbank.org/source/icp-2017?preview=on][ICP-2017 database]]
  - Code,Long Name,Currency Unit,Table Name,Household consumption price survey: Geographical coverage
  - Examples

     AFG,Islamic State of Afghanistan,AFN: Afghani,Afghanistan,
     ALB,Republic of Albania,ALL: Lek,Albania,Urban only
     DZA,People's Democratic Republic of Algeria,DZD: Algerian Dinar,Algeria,Urban and Rural

- ICP-2017 Purchasing power parity (PPP) (US$ = 1)
  - Extracted the following from [[https://databank.worldbank.org/source/icp-2017?preview=on][ICP-2017 database]]
    - Actual Individual Consumption (AIC) per capita

** Author

   HIRANO Satoshi Ph.D  AIST, University of Tokyo IIS, Peace and Passion

** [[../LICENSE][MIT License]]

Copyright 2019-2021 The National Institute of Advanced Industrial Science and Technology (AIST), Japan
