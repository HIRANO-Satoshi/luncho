'''
Luncho server

@author HIRANO Satoshi
@date  2020/02/28
'''

import csv
import pdb
import re
from typing import List, Dict, Tuple, Union, Any, Type, Generator, Optional, ClassVar, cast
from mypy_extensions import TypedDict


from fastapi import FastAPI
from starlette.middleware.cors import CORSMiddleware

app = FastAPI()

# CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "*", # "http://localhost:8082",
    ],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ICP country metadata
#   {'AFG': { 'Code': 'AFG', 'Long NameError(Islamic State of Afghanistan,AFN: Afghani,Afghanistan,
#   {'ALB': {1980: 24.4, 1981: 24.5...
class CountryMetadata(TypedDict):
    code: str                 # AFG  (ISO 3 letter country code)
    long_name: str            # Islamic State of Afghanistan
    currency_name: str        # Afghani
    table_name: str           # Afghanistan
    coverage: Optional[str]   # Urban and Rural, Urban only, Rural only

country_metadata: Dict[str, CountryMetadata] = {}   # country_code, CountryMetadata

# IMF PPP data
#   {'AFG': {            1981: 17.4...
#   {'ALB': {1980: 24.4, 1981: 24.5...

class Country_IMF_PPP(TypedDict):
    imf_ppp: Dict[int, float]  # { year: ppp }

imf_ppp: Dict[str, Country_IMF_PPP] = {}

@app.get("/convert-from-luncho/")
async def convert_from_luncho(currency_code: str, luncho_value: float):
    ppp = 1.0
    if currency_code == 'USD':
        ppp = 4.81
    elif currency_code == 'JPY':
        ppp = 530
    elif currency_code == 'EURO':
        ppp = 4.40
    elif currency_code == 'CNY':
        ppp = 33.92

    return {"currency_value": luncho_value * ppp}

def read_data():
    global country_metadata, imf_ppp

    # CountryMetadata into country_metadata
    with open('data/Data_Extract_From_ICP_2017_Metadata.csv', newline='', encoding="utf_8_sig") as metadata_file:
        metadata_reader  = csv.DictReader(metadata_file)
        for data in metadata_reader:
            data['code'] = data['Code']
            del data['Code']
            data['long_name'] = data['Long Name']
            del data['Long Name']
            # decompose Currency Unit           AFN: Afghani
            currency_unit: Optional[str] = data['Currency Unit']
            data['currency_code'] = currency_unit[0:3]
            currency_name: str = currency_unit[5:]
            data['currency_name'] = re.sub(' \(.*?\)', '', currency_name)
            del data['Currency Unit']

            data['table_name'] = data['Table Name']
            if data['table_name'] == 'Taiwan, China':
                data['table_name'] = 'Taiwan'
            del data['Table Name']
            # coverage
            coverage: Optional[str] = data.get('Household consumption price survey: Geographical coverage')
            del data['Household consumption price survey: Geographical coverage']
            if coverage:
                data['coverage'] = coverage

            country_metadata[data['code']] = dict(data)
        #print(str(country_metadata))

    # build imf_ppp: Country_IMF_PPP Implied PPP conversion rate (National currency per international dollar)
    mapping = {
        "China, People's Republic of": 'China',
        "Congo, Dem. Rep. of the": 'Congo, Dem. Rep.',
        "Congo, Republic of ": 'Congo, Rep.',
        "Egypt": 'Egypt, Arab Rep.',
        "Hong Kong SAR": 'Hong Kong SAR, China',
        "Iran": 'Iran, Islamic Rep.',
        "Korea, Republic of": 'Korea, Rep.',
        "Lao P.D.R.": 'Lao PDR',
        "Macao SAR": 'Macao SAR, China',
        "Micronesia, Fed. States of": "Micronesia, Fed. Sts.",
        "North Macedonia ": "North Macedonia",
        "Saint Kitts and Nevis": "St. Kitts and Nevis",
        "Saint Lucia": "St. Lucia",
        "Saint Vincent and the Grenadines": "St. Vincent and the Grenadines",
        "South Sudan, Republic of": "South Sudan",
        "Syria": "Syrian Arab Republic",
        "São Tomé and Príncipe": "São Tomé and Principe",
        "Taiwan Province of China": "Taiwan",
        "Venezuela": "Venezuela, RB",
        "Yemen": "Yemen, Rep.",

    }
    with open('data/imf-dm-export-20201110.csv', newline='', encoding="utf_8_sig") as imf_file:
        imf_reader  = csv.DictReader(imf_file)
        for data in imf_reader:
            table_name: str = data.get('Implied PPP conversion rate (National currency per international dollar)')
            if not table_name or not data.get('2020'):
                continue
            table_name = mapping.get(table_name, table_name)
            #pdb.set_trace()
            country_code: Optional[str] = None
            for code, metadata in country_metadata.items(): #type: str, CountryMetadata
                # print('code=' + code)
                # print('metadata = ' + str(metadata))
                if metadata['table_name'] == table_name:
                    country_code = code
            assert country_code, 'country code for ' + table_name
            ppps = {}
            for year in range(1980, 2100):
                ppp = data.get(str(year))
                if ppp is None or ppp == 'no data':
                    continue
                ppps[year] = float(ppp)
            # print(str(ppps))
            imf_ppp[country_code] = ppps
        print(str(imf_ppp))
# initialize
read_data()
